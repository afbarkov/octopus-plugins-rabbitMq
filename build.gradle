plugins {
    id 'java'
    id 'maven-publish'
    id 'distribution'
}

group 'ru.integrotechnologies.octopus.library'
version '3.0.0'
sourceCompatibility = '19'
targetCompatibility = '19'
repositories {
 mavenLocal()
    mavenCentral()
    maven {
        allowInsecureProtocol = true
        url "http://10.77.18.10:8081/repository/maven-public/"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            // more goes in here
        }
    }
    repositories {
        maven {
            allowInsecureProtocol = true
            def releasesRepoUrl = "http://10.77.18.10:8081/repository/maven-releases/"
            def snapshotsRepoUrl = "http://10.77.18.10:8081/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = "$integro_nexus_usr"
                password = "$integro_nexus_pwd"
            }
        }
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    compileOnly group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.20.0'
    compileOnly group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.1'
    
    compileOnly 'ru.integrotechnologies.octopus:node-api:3.1.97'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'


    implementation group: 'com.rabbitmq', name: 'amqp-client', version: '5.16.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

//jar{
//    from {
//        into('libs') {
//            from(configurations.runtimeClasspath)
//        }
//        //configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//
//}

distributions {
    main {
        contents {
            from jar // copies your jar
            from(configurations.runtimeClasspath) // copies dependency jars
        }
    }
}

test {
    useJUnitPlatform()
}
task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs'
}
